version: "3.0"
services:
  db:
    image: postgres
    container_name: go-market-db
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    profiles:
      - dependencies
    volumes:
      - go-market-db-volumes:/var/lib/postgresql/data
    networks:
      - go-market-network
    ports:
      - "5432:5432"
    expose:
      - 5432
    restart: always

  product-service:
    build:
      context: ..
      dockerfile: ./deployment/app.Dockerfile
      args:
        - SERVICE_NAME=product_service
        - SERVICE_PORT=8080
    # Command will be appended to entrypoint as arg
    command: ["product_service"]
    ports:
      - 8080:8080
    networks:
      - go-market-network
    profiles:
      - "app"
    depends_on:
      - db
    restart: always

  order-service:
    build:
      context: ..
      dockerfile: ./deployment/app.Dockerfile
      args:
        - SERVICE_NAME=order_service
        - SERVICE_PORT=8081
    # Command will be appended to entrypoint as arg
    command: ["order_service"]
    ports:
      - 8081:8081
    networks:
      - go-market-network
    profiles:
      - "app"
    depends_on:
      - db
    restart: always

  migrations:
    image: migrate/migrate
    networks:
      - go-market-network
    volumes:
      - ../migrations:/migrations
    environment:
      - POSTGRES_HOST=db
    command: ["-path", "/migrations", "-database",  "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}?sslmode=disable", "up"]
    profiles:
      - dependencies
    depends_on:
      - db

networks:
  go-market-network:
    driver: bridge

volumes:
  go-market-db-volumes:
    driver: local
